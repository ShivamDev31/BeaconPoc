apply plugin: 'com.android.application'
apply from: '../config/quality/quality.gradle'
apply plugin: 'jacoco'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'me.tatarka.retrolambda'
//apply plugin: 'io.fabric'

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.3'

    dexOptions {
        maxProcessCount 4
        preDexLibraries false
        javaMaxHeapSize "8g"
    }

    defaultConfig {
        defaultPublishConfig 'debug'

        applicationId "com.shivamdev.beaconpoc"
        minSdkVersion 19
        targetSdkVersion 25
        testInstrumentationRunner "${applicationId}.runner.RxAndroidJUnitRunner"
        versionCode 1000
        // Major -> Millions, Minor -> Thousands, Bugfix -> Hundreds. E.g 1.3.72 == 1,003,072
        versionName '0.1.0'

        buildConfigField("String", "POKEAPI_API_URL",
                "\"${PokeapiApiUrl}\"")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        def commonTestDir = 'src/commonTest/java'
        test {
            java.srcDir commonTestDir
        }
        androidTest {
            java.srcDir commonTestDir
        }
    }

    lintOptions {
        textOutput "stdout"
        textReport true
        checkAllWarnings true
        warningsAsErrors true
        showAll true
        explainIssues true
        abortOnError false
        lintConfig file("$projectDir/lint.xml")
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'LICENSE.txt'
        exclude 'META-INF/license/LICENSE.base64.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/rxjava.properties'
    }

    testOptions {
        unitTests {
            returnDefaultValues = true
            all {
                jacoco {
                    includeNoLocationClasses = true
                }
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

configurations.all {
    resolutionStrategy {
        force 'com.squareup.okio:okio:1.11.0'
        force "com.squareup.okhttp3:okhttp:3.5.0"
    }
}

retrolambda {
    jvmArgs '-noverify'
}

apply from: 'dependencies.gradle'

dependencies {

    compile supportLibs
    compile networkLibs
    compile rxJavaLibs
    compile googlePlayLibs

    compile('com.github.bumptech.glide:okhttp3-integration:1.4.0') {
        exclude group: 'glide-parent'
    }

    //RxPermission for easy runtime permission management


    compile "com.jakewharton:butterknife:$versions.butterKnife"


    debugCompile('com.github.ajitsing:sherlock:1.0.2@aar') {
        transitive = true
    }


    compile "com.google.dagger:dagger:$versions.dagger"
    //Required by Dagger2

    debugCompile leakCannary
    releaseCompile leakCannary
    testCompile leakCannary

    // APT dependencies
    annotationProcessor "com.jakewharton:butterknife-compiler:$versions.butterKnife"
    annotationProcessor daggerCompiler
    testAnnotationProcessor daggerCompiler
    androidTestAnnotationProcessor daggerCompiler

    compile('com.mikepenz:fastadapter:2.6.2@aar') {
        transitive = true
    }

    compile 'com.mikepenz:fastadapter-commons:2.6.0@aar'

    compile 'com.mikepenz:fastadapter-extensions:2.6.0@aar'

    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.tbruyelle.rxpermissions:rxpermissions:0.9.4@aar'
    compile 'com.jakewharton.timber:timber:4.5.1'
    compile 'com.facebook.stetho:stetho-okhttp3:1.5.0'
    compile 'com.tspoon.traceur:traceur:1.0.1'
    compile 'org.glassfish:javax.annotation:10.0-b28'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    debugCompile 'com.readystatesoftware.chuck:library:1.0.4'
    releaseCompile 'com.readystatesoftware.chuck:library-no-op:1.0.4'
    releaseCompile 'com.github.ajitsing:sherlock-no-op:1.0.2@aar'
}

// Log out test results to console
tasks.matching { it instanceof Test }.all {
    testLogging.events = ["failed", "passed", "skipped"]
}